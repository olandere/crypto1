package crypto

object Project5 {
    val p = BigInt("13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171")
    val g = BigInt("11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568")
    val h = BigInt("3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333")

    val B = math.pow(2, 20).toInt
    val gB = g.modPow(B, p)

    val table = (for {i <- 0 to B} yield ((h*g.modPow(i, p).modInverse(p)).mod(p) -> i)).toMap

    //(Some(x1), x0)
    val xs = (for {i <- 1 to B} yield (table.get(gB.modPow(i, p)), i)).filter{case (a, _) => a.isDefined}.head
    val result = BigInt(xs._2)*B + xs._1.get
}
